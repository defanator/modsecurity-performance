#!/usr/bin/make

NGINXVER={{ nginxver }}
LMSREV={{ lmsrev }}
CONNECTORREV={{ connectorrev }}
WRKREV={{ wrkrev }}

NPROC=$(shell getconf _NPROCESSORS_ONLN)

MAKEJFLAG=
ifneq ($(NPROC),1)
MAKEJFLAG=-j$(NPROC)
endif

CC_OPT_ADD=
LD_OPT_ADD=
ifdef ASAN
CC_OPT_ADD= -fsanitize=address
LD_OPT_ADD= -fsanitize=address
LMS_ASAN_ENV=	CFLAGS=-fsanitize=address CXXFLAGS=-fsanitize=address LDFLAGS=-fsanitize=address
endif

NGINX_CC_OPT=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wp,-D_FORTIFY_SOURCE=2 -fPIC
NGINX_CC_OPT_DEBUG=$(NGINX_CC_OPT) -DMODSECURITY_DDEBUG=1 -DMODSECURITY_SANITY_CHECKS=1
NGINX_LD_OPT=-Wl,-Bsymbolic-functions -Wl,-z,relro -Wl,-z,now -Wl,--as-needed -pie
NGINX_LD_OPT_DEBUG=$(NGINX_LD_OPT)

NGINX_CONFIGURE_ARGS=\
	--prefix=/etc/nginx \
	--sbin-path=/usr/sbin/nginx \
	--modules-path=/usr/lib/nginx/modules \
	--conf-path=/etc/nginx/nginx.conf \
	--error-log-path=/var/log/nginx/error.log \
	--http-log-path=/var/log/nginx/access.log \
	--pid-path=/var/run/nginx.pid \
	--lock-path=/var/run/nginx.lock \
	--http-client-body-temp-path=/var/cache/nginx/client_temp \
	--http-proxy-temp-path=/var/cache/nginx/proxy_temp \
	--http-fastcgi-temp-path=/var/cache/nginx/fastcgi_temp \
	--http-uwsgi-temp-path=/var/cache/nginx/uwsgi_temp \
	--http-scgi-temp-path=/var/cache/nginx/scgi_temp \
	--user=nginx \
	--group=nginx \
	--with-compat \
	--with-file-aio \
	--with-threads \
	--with-http_addition_module \
	--with-http_auth_request_module \
	--with-http_dav_module \
	--with-http_flv_module \
	--with-http_gunzip_module \
	--with-http_gzip_static_module \
	--with-http_mp4_module \
	--with-http_random_index_module \
	--with-http_realip_module \
	--with-http_secure_link_module \
	--with-http_slice_module \
	--with-http_ssl_module \
	--with-http_stub_status_module \
	--with-http_sub_module \
	--with-http_v2_module \
	--with-mail \
	--with-mail_ssl_module \
	--with-stream \
	--with-stream_realip_module \
	--with-stream_ssl_module \
	--with-stream_ssl_preread_module \
	--add-module=../ModSecurity-nginx

default:
	@echo "valid targets: all, lms, ngxmod, nginx-static"

all: lms ngxmod wrk

ModSecurity:
	@git clone https://github.com/SpiderLabs/ModSecurity.git && \
	cd ModSecurity && \
	git checkout $(LMSREV) && \
	git submodule init && \
	git submodule update

ModSecurity-nginx:
	@git clone https://github.com/SpiderLabs/ModSecurity-nginx.git && \
	cd ModSecurity-nginx && \
	git checkout $(CONNECTORREV)

lms:	ModSecurity
	@cd ModSecurity && \
	./build.sh && \
	$(LMS_ASAN_ENV) ./configure --prefix=/usr --without-lmdb && \
	make $(MAKEJFLAG) && \
	sudo make install
	@touch $@

nginx-$(NGINXVER).tar.gz:
	@wget http://nginx.org/download/nginx-$(NGINXVER).tar.gz

nginx-$(NGINXVER): nginx-$(NGINXVER).tar.gz
	@tar mzvxf nginx-$(NGINXVER).tar.gz

ngxmod:	ModSecurity ModSecurity-nginx nginx-$(NGINXVER)
	@cd nginx-$(NGINXVER) && \
	export MODSECURITY_INC=/usr/include && \
	export MODSECURITY_LIB=/usr/lib && \
	export NGX_IGNORE_RPATH=YES && \
	./configure --with-compat --add-dynamic-module=../ModSecurity-nginx \
			--with-cc-opt='$(NGINX_CC_OPT_DEBUG) $(CC_OPT_ADD)' \
			--with-ld-opt='$(NGINX_LD_OPT_DEBUG) $(LD_OPT_ADD)' \
			--with-debug && \
	make modules && \
	cp -p objs/ngx_http_modsecurity_module.so ngx_http_modsecurity_module-debug.so && \
	make clean && \
	./configure --with-compat --add-dynamic-module=../ModSecurity-nginx \
			--with-cc-opt='$(NGINX_CC_OPT) $(CC_OPT_ADD)' \
			--with-ld-opt='$(NGINX_LD_OPT) $(LD_OPT_ADD)' && \
	make modules && \
	cp -p objs/ngx_http_modsecurity_module.so ./
	@cp -p nginx-$(NGINXVER)/*.so ./
	@touch $@

nginx-static:	ModSecurity ModSecurity-nginx nginx-$(NGINXVER)
	@cd nginx-$(NGINXVER) && \
	export MODSECURITY_INC=/usr/include && \
	export MODSECURITY_LIB=/usr/lib && \
	export NGX_IGNORE_RPATH=YES && \
	./configure $(NGINX_CONFIGURE_ARGS) --with-cc-opt='$(NGINX_CC_OPT_DEBUG) $(CC_OPT_ADD)' --with-ld-opt='$(NGINX_LD_OPT_DEBUG) $(LD_OPT_ADD)' --with-debug && \
	make $(MAKEJFLAG) && \
	cp -p objs/nginx nginx-static.debug && \
	make clean && \
	./configure $(NGINX_CONFIGURE_ARGS) --with-cc-opt='$(NGINX_CC_OPT) $(CC_OPT_ADD)' --with-ld-opt='$(NGINX_LD_OPT) $(LD_OPT_ADD)' && \
	make $(MAKEJFLAG) && \
	cp -p objs/nginx nginx-static
	@cp -p nginx-$(NGINXVER)/nginx-static* ./

wrk:
	@git clone https://github.com/wg/wrk.git && \
	cd wrk && \
	git checkout $(WRKREV) && \
	make

nginx-tests:
	@hg clone http://hg.nginx.org/nginx-tests

nginx-tests-modsec-on:
	@hg clone http://hg.nginx.org/nginx-tests nginx-tests-modsec-on && \
	cd nginx-tests-modsec-on && \
	for i in *.t; do cp -n $$i $$i.orig; perl ../ModSecurity-nginx/tests/nginx-tests-cvt.pl < $$i.orig > $$i; rm $$i.orig; done

test:	lms ngxmod nginx-tests
	@cd nginx-tests && \
	cp ../ModSecurity-nginx/tests/*.t ./ && \
	TEST_NGINX_BINARY=/usr/sbin/nginx \
	TEST_NGINX_GLOBALS="load_module /home/test/nginx-$(NGINXVER)/ngx_http_modsecurity_module.so;" \
	prove modsecurity*.t

test-debug:	lms ngxmod nginx-tests
	@cd nginx-tests && \
	cp ../ModSecurity-nginx/tests/*.t ./ && \
	TEST_NGINX_BINARY=/usr/sbin/nginx-debug \
	TEST_NGINX_GLOBALS="load_module /home/test/nginx-$(NGINXVER)/ngx_http_modsecurity_module-debug.so;" \
	prove modsecurity*.t

test-all: lms ngxmod nginx-tests
	@cd nginx-tests && \
	cp ../ModSecurity-nginx/tests/*.t ./ && \
	TEST_NGINX_BINARY=/usr/sbin/nginx \
	TEST_NGINX_GLOBALS="load_module /home/test/nginx-$(NGINXVER)/ngx_http_modsecurity_module.so;" \
	prove .

test-all-debug: lms ngxmod nginx-tests
	@cd nginx-tests && \
	cp ../ModSecurity-nginx/tests/*.t ./ && \
	TEST_NGINX_BINARY=/usr/sbin/nginx-debug \
	TEST_NGINX_GLOBALS="load_module /home/test/nginx-$(NGINXVER)/ngx_http_modsecurity_module-debug.so;" \
	prove .

test-all-modsec-on: lms ngxmod nginx-tests-modsec-on
	@cd nginx-tests-modsec-on && \
	cp ../ModSecurity-nginx/tests/*.t ./ && \
	TEST_NGINX_BINARY=/usr/sbin/nginx \
	TEST_NGINX_GLOBALS="load_module /home/test/nginx-$(NGINXVER)/ngx_http_modsecurity_module.so;" \
	prove .

test-all-modsec-on-debug: lms ngxmod nginx-tests-modsec-on
	@cd nginx-tests-modsec-on && \
	cp ../ModSecurity-nginx/tests/*.t ./ && \
	TEST_NGINX_BINARY=/usr/sbin/nginx-debug \
	TEST_NGINX_GLOBALS="load_module /home/test/nginx-$(NGINXVER)/ngx_http_modsecurity_module-debug.so;" \
	prove .

clean:
	@rm -rf ModSecurity/ ModSecurity-nginx/ nginx-$(NGINXVER).tar.gz nginx-$(NGINXVER)/ lms ngxmod nginx-tests* ngx_http_modsecurity_module*.so nginx-static*
